#输入输出
print('who do you think i am')
input()
print('how old are you')
input()
print('oh yes')

#变量
print('guess a num')
a=input()
print('you enter is '+ a)

a=input('guess a num:')
print('you enter is '+ a)



money=20
result=money*2+50
print(result)

a='hello,world'
b=1.414
c=(1!=2)
d=(True and False)
e=(True or False)
print(a,b,c,d,e)


#1. 字符串拼接
name = 'Crossin'
age = 18
code = 'Python'

# 通过 % 将 name, age, code 拼接成一句话
# 输出 Crossin is 18, he writes Python.
result='%s is %d,he writes %s.'%(name,age,code)
print(result)


#2. print()
num1 = '3.3'
num2 = 2.5

# 将 num1 转换为浮点数
num1 = float(num1)

# 再和 num2 相加后输出
print(num1+num2)

#3. bool类型转换
#判断以下结果的值为 True 还是 False：

a=bool(-123)
#f t
b=bool(0)
#f
c=bool('abc')
#t
e=bool('False')
#t
f=bool('')
#t f
g=bool([])
#f
h=bool({})
#f
i=bool([''])
#f t
j=bool(None)
#f
print(a,b,c,e,f,g,h,i,j)


#-*-coding:utf-8-*
#1. if条件判断
'''
money = 88

# 当 money 的值大于 100 时，输出 "rich"
# 否则，输出 "poor"

if money>100:
    print("rich")
else:
    print("poor")
#2. 逻辑判断
#判断下面示例是否会输出 True 并亲自验证

#（a）true
bingo = False
if bingo == False:
    print(True)
else:
    print(False)
#（b）flase
b = 3
if b - 3:
    print(True)
else:
    print(False)
#（c）true
x = input('请输入内容')
if x:
    print(True)
else:
    print(False)
#（d）f t f t f t f
a = True
b = not a  # 不记得not请回顾第二课
print(b)
print(not b)
print(a == b)
print(a != b)
print(a and b)
print(a or b)
print(1<2 and b==True)
'''
#3. BMI 计算器
#BMI 指数（即身体质量指数，简称体质指数又称体重，英文为Body Mass Index，简称BMI），是用体重公斤数除以身高米数平方得出的数字

#BMI < 18.5 体重偏轻 18.5 <= BMI < 24 体重正常 BMI >= 24 体重偏重 设计一个BMI计算器吧，看看自己体重是否正常。

#输入：身高、体重值

#输出：BMI 指数、是否正常

print('输入身高，体重')
height=float(input())
weight=float(input())
BMI=weight/(height*height)
if BMI<18.5:
    print('you weight is too light')
elif 18.5 <= BMI < 24:
    print('you weight is normal')
else :
    print ('you weight is too heavy')

练习
1.
计算100以内所有3的倍数的和（即：计算3、6、9...
96、99
的和）
'''
sum=0
for i in range(1,100):
    if i%3==0:
        sum=i+sum
print(sum)
'''
2.
分别输入高和宽两个整数，输出对应高度和宽度的矩形。比如：
输入3和4，输出

* * * *
* * * *
* * * *
输入5和7，输出

* * * * * * *
* * * * * * *
* * * * * * *
* * * * * * *
* * * * * * *
'''
print('分别输入高和宽两个整数')
h=int(input())
w=int(input())
for i in range(1,h+1):
#    print('*', end=" ")
    for j in range(1,w+1):
        print('*',end=" ")
    print('\n')

'''
3.
输出九九乘法口诀表
# 1 x 1 = 1
# 1 x 2 = 2
# ...
# 9 x 1 = 9
# ...
# 9 x 9 = 81
'''
for i in range(1,10):
    for j in range(1,10):
        sum=i*j
        print('%d x %d = %d'%(i,j,sum))
'''


4.
跳出循环
nums = [23, 45, 8, 13, 50, 43, 21]

# 把 nums 里的值从前向后累加
# 当总和超过 100 时则不再继续累加

'''
sum=0
nums = [23, 45, 8, 13, 50, 43, 21]
for n in nums:
    sum=sum+n
    if sum>100:
        break
    print(n)
print(sum)


#1. 猜数字小游戏                                                                                             
#在第四课里，我们用 if 改进猜数字小游戏后，功能已经基本实现了。但是有没有办法能让玩家一直猜，直到猜中为止？试着用 while 循环完成这个任务                             
'''                                                                                                    
a=9                                                                                                    
print('guess a num')                                                                                   
num = int(input())                                                                                     
while a!=num:                                                                                          
    print('you are wrong,please again')                                                                
    num = int(input())                                                                                 
print('you are right')                                                                                 
'''                                                                                                    
#. while, continue                                                                                     
# 输出 1 到 10，但不输出 4 和 5                                                                                 
'''                                                                                                    
count=0                                                                                                
while count<10:                                                                                        
    count += 1                                                                                         
    if count==4 or count==5:                                                                           
        continue                                                                                       
#    count += 1                                                                                        
    print(count)                                                                                       
 '''                                                                                                   
#3. 使用 while 计算100以内所有3的倍数的和（即：计算3、6、9 ... 96、99 的和）                                                   
'''                                                                                                    
sum=0                                                                                                  
i=0                                                                                                    
while i<100:                                                                                           
    i += 1                                                                                             
    if i%3 == 0:                                                                                       
        sum += i                                                                                       
print(sum)                                                                                             
'''                                                                                                    
#1. 操作列表                                      
# 创建一个列表 lst，其中的元素依次是 1，2，3                   
'''                                           
lst =[1,2,3]                                  
# 输出 lst 中的第一个元素 1                            
print(lst[0])                                 
#将 lst 的第二个元素 2 改为 4                          
lst[1]=4                                      
# 在 lst 末尾再增加一个元素 5                           
lst.append(5)                                 
print(lst)                                    
'''                                           
'''                                           
#2. 列表切片操作                                    
lst = [365, 'everyday', 0.618, True, 2, 5]    
# 取出 lst 的第二个位置至倒数第二个位置的子串                    
lst=lst[1:-2]                                 
# 创建为一个新列表 lst2                               
lst2 = lst                                    
print(lst2)                                   
'''                                           
'''                                           
#3. 分割与连接字符串                                  
word = 'I am Mr Crossin of Python'            
lst=word.split()                              
# 将字符串 word 按照空格分割成一个列表                       
#lst = word                                   
print(lst)                                    
# 再将分割后的列表以逗号(,)重新拼接成字符串                      
s = ','                                       
w=s.join(lst)                                 
print(w)                                      
'''                                           
                                              
